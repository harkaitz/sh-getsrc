#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##:
#h: Usage: $0 [-v][-f][-n FILENAME] URL [CDIR]
#h:
#h: Download a file to a local cache directory optionally
#h: with a FILENAME. Check honored environment variables
#h: with -v. Force download with -f.
#h: 
##:
getsrc_cached() {
    ## Parse command line arguments.
    local OPTIND optopt= opt_v=n opt_n=
    while getopts "vn:f" optopt;do # OPTARG
        case $optopt in
            v)  local opt_v=y;;
            n)  local opt_n="${OPTARG}";;
            f)  local GETSRC_FORCE=y;;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    local url="$1" sdir="${2:-${GETSRC_CACHE}}"
    ## Show variables.
    if test @"${opt_v}" = @"y";then
        getsrc_cached_show_variables
        return 0
    fi
    ## Require at least an URL.
    if test ! -n "${url}";then
        echo "getsrc-cached: error: Please specify an URL." >&2
        return 1
    fi
    ## Download file.
    if test -n "${opt_n}";then
        local file="${sdir}/${opt_n}"
    else
        local file="${sdir}/`basename "${url}"`"
    fi
    if test ! -f "${file}" || test @"${GETSRC_FORCE}" = @"y";then
        echo "Downloading ${url} ..."     >&2
        mkdir -p "${GETSRC_CACHE}"
        wget -q -O "${file}.tmp" "${url}" >&2
        mv "${file}.tmp" "${file}"        >&2
    fi
    echo "${file}"
}
getsrc_cached_show_variables() {
    printf '%-20s : %s\n' GETSRC_CACHE "${GETSRC_CACHE}"
    printf '%-20s : %s\n' GETSRC_FORCE "${GETSRC_FORCE}"
}
getsrc_cached_calc_variables() {
    GETSRC_CACHE="${GETSRC_CACHE:-${HOME}/.local/cache}"
    GETSRC_FORCE="${GETSRC_FORCE:-n}"
}


## -------------------------------------------------------------------------

##
getsrc_cached_calc_variables
if test @"`basename "$0"`" = @"getsrc-cached";then
    if test -n "$1";then
        getsrc_cached "$@"
    else
        sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|`basename $0`|g"
        echo ""
        sed -n 's/^ *#l: \{0,2\}//p' "$0"
    fi
fi
