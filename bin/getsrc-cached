#!/bin/sh -e
##:
#h: Usage: getsrc-cached [-v][-f][-n FILENAME] URL [CDIR]
#h:
#h: Download a file to a local cache directory optionally
#h: with a FILENAME. Check honored environment variables
#h: with -v. Force download with -f.
##:
getsrc_cached() {
    ## Parse command line arguments.
    local OPTIND=1 optopt= opt_v=n opt_n=
    while getopts "vn:f" optopt;do # OPTARG
        case $optopt in
            v)  local opt_v=y;;
            n)  local opt_n="${OPTARG}";;
            f)  local GETSRC_FORCE=y;;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    local url="$1" sdir="${2:-${GETSRC_CACHE}}"
    ## Show variables.
    if test @"${opt_v}" = @"y";then
        getsrc_cached_show_variables
        return 0
    fi
    ## Require at least an URL.
    if test ! -n "${url}";then
        echo "getsrc-cached: error: Please specify an URL." >&2
        return 1
    fi
    ## Download file.
    if test -n "${opt_n}";then
        local file="${sdir}/${opt_n}"
    else
        local file="${sdir}/`basename "${url}"`"
    fi
    if test ! -f "${file}" || test @"${GETSRC_FORCE}" = @"y";then
        echo "Downloading ${url} ..."     >&2
        mkdir -p "${GETSRC_CACHE}"
        wget -q -O "${file}.tmp" "${url}" >&2
        mv "${file}.tmp" "${file}"        >&2
    fi
    echo "${file}"
}
getsrc_cached_show_variables() {
    printf '%-20s : %s\n' GETSRC_CACHE "${GETSRC_CACHE}"
    printf '%-20s : %s\n' GETSRC_FORCE "${GETSRC_FORCE}"
}
getsrc_cached_calc_variables() {
    GETSRC_CACHE="${GETSRC_CACHE:-${HOME}/.local/cache}"
    GETSRC_FORCE="${GETSRC_FORCE:-n}"
}
## -------------------------------------------------------------------
getsrc_cached_calc_variables
if test @"${SCRNAME:-$(basename "$0")}" = @"getsrc-cached"; then
    case "${1}" in
        ''|-h|--help) sed -n 's/^ *#h: \{0,1\}//p' "$0" ;;
        *)            getsrc_cached "$@"; exit 0;;
    esac
fi
